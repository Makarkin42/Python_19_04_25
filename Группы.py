import telebot
from telebot.types import (Message, ReplyKeyboardMarkup, ReplyKeyboardRemove,
                           InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery)
from config import TOKEN
import time
import random
bot = telebot.TeleBot(TOKEN)
players = []
alls = []
reps = []
blitz = time.time()

@bot.message_handler(content_types=["new_chat_members"])
def handler(message: Message):
    print(message.new_chat_members)
    for member in message.new_chat_members:
        bot.send_message(chat_id=message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, @{member.username}")

@bot.message_handler(commands=["play"])
def game(message: Message):
    keyb = InlineKeyboardMarkup()
    keyb.row(InlineKeyboardButton("–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è", callback_data="play"))
    bot.send_message(chat_id=message.chat.id, text="–ù–∞—á–∞–ª–∞—Å—å –∏–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞", reply_markup=keyb)

@bot.callback_query_handler(func=lambda call:call.data.startswith("play"))
def callback(call: CallbackQuery):
    global mess, blitz
    if call.from_user.username not in players:
        players.append(call.from_user.username)
        bot.answer_callback_query(call.id, text="–¢—ã –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è!")
        print(players)
        if len(players) == 1:
            mess = bot.send_message(chat_id=call.message.chat.id, text=f"–ü–µ—Ä–≤—ã–π —Ö–æ–¥–∏—Ç @{players[0]}")
        elif len(players) == 2:
            blitz = time.time()
            bot.delete_message(chat_id=mess.chat.id, message_id=mess.id)
            mess = bot.send_message(chat_id=call.message.chat.id, text=f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –≤—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫, —É —Ç–µ–±—è 15 —Å–µ–∫—É–Ω–¥!")
    else:
        bot.answer_callback_query(call.id, text="–¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ!")

@bot.message_handler(commands=["report"])
def rep(message: Message):
    if alls:
        keyb = InlineKeyboardMarkup()
        keyb.row(InlineKeyboardButton(text="–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å", callback_data="report"))
        bot.send_message(text="–°—á–∏—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥ –Ω–∞–¥–æ –æ—Ç–º–µ–Ω–∏—Ç—å?", chat_id=message.chat.id,
                         reply_markup=keyb)

@bot.callback_query_handler(func=lambda call:call.data.startswith("report"))
def callback(call: CallbackQuery):
    if call.from_user.username not in reps:
        reps.append(call.from_user.username)
        half = len(players) // 2
        if len(reps) > half:
            bot.edit_message_text(text="–•–æ–¥ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω!", chat_id=call.message.chat.id, message_id=call.message.id)
            alls.remove(alls[-1])
            pop = players.pop(-1)
            players.insert(0,pop)
            global mess
            bot.delete_message(chat_id=mess.chat.id, message_id=mess.id)
            mess = bot.send_message(chat_id=call.message.chat.id, text=f"–¢–µ–ø–µ—Ä—å —Ö–æ–¥–∏—Ç @{players[0]}")
            reps.clear()
    else:
        bot.answer_callback_query(call.id, text="–¢—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª!")

@bot.message_handler(content_types=["text", "sticker"])
def handler(message: Message):
    '''emo = random.choice(["ü§°", "ü§ë", "üèÄ", "üòé", "ü•µ","üë∂üèø"])
    print(message.chat.id, message.from_user.id)
    bot.send_message(chat_id=message.chat.id, text="–î–∞–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç!!!")
    bot.send_message(chat_id=message.chat.id, text=f"{emo}")'''
    now = time.time()
    global mess
    global blitz
    print(now - blitz, blitz, now)
    if now - blitz >= 15 and len(players) > 1:
        pop = players.pop(0)
        bot.delete_message(chat_id=mess.chat.id, message_id=mess.id)
        mess = bot.send_message(chat_id=message.chat.id,
                                text=f"@{pop} —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –¥—É–º–∞–µ—Ç, –∑–∞ —á—Ç–æ –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω!"
                                     f" –¢–µ–ø–µ—Ä—å —Ö–æ–¥–∏—Ç @{players[0]}")
        blitz = time.time()
        if len(players) == 1:
            bot.send_message(chat_id=message.chat.id, text=f"@{players[0]} –ø–æ–±–µ–¥–∏–ª –≤ –∏–≥—Ä–µ! –î–µ—Ä–∂–∏ –º–µ–¥–∞–ª—å–∫—Éü•á\n"
                            f"–ó–∞ –≤—Å—é –∏–≥—Ä—É –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–æ {len(alls)} —Å–ª–æ–≤ –∏ –ø–æ—É—á–∞–≤—Å—Ç–≤–æ–≤–∞–ª–æ {len(players)} —á–µ–ª–æ–≤–µ–∫!")
            alls.clear()
            players.clear()
    if players and players[0] == message.from_user.username:
        word = message.text.lower()
        if alls and word[0] != alls[-1][-1]:
            bot.delete_message(chat_id=message.chat.id, message_id=message.id)
        elif word in alls:
            bot.delete_message(chat_id=message.chat.id, message_id=message.id)
        elif not word.isalpha():
            print(word.isalpha(), word)
            bot.delete_message(chat_id=message.chat.id, message_id=message.id)
        else:
            players.append(message.from_user.username)
            players.remove(message.from_user.username)
            alls.append(word)
            print(alls, players)
            bot.delete_message(chat_id=mess.chat.id, message_id=mess.id)
            mess = bot.send_message(chat_id=message.chat.id, text=f"–¢–µ–ø–µ—Ä—å —Ö–æ–¥–∏—Ç @{players[0]}, —É —Ç–µ–±—è 15 —Å–µ–∫—É–Ω–¥")
            blitz = time.time()

bot.infinity_polling()